// Generated by Xata Codegen 0.18.0. Please do not edit.
import {
  BaseClientOptions,
  buildClient,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "incomes",
    columns: [
      { name: "price", type: "int" },
      { name: "date", type: "datetime" },
      { name: "desc", type: "string" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Incomes = InferredTypes["incomes"];
export type IncomesRecord = Incomes & XataRecord;

export type DatabaseSchema = {
  incomes: IncomesRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Babatunde-Samson-s-workspace-neck7l.us-east-1.xata.sh/db/income-tracker",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
